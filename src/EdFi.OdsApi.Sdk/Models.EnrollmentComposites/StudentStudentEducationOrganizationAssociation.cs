/* 
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = EdFi.OdsApi.Sdk.Client.SwaggerDateConverter;

namespace EdFi.OdsApi.Sdk.Models.EnrollmentComposites
{
    /// <summary>
    /// StudentStudentEducationOrganizationAssociation
    /// </summary>
    [DataContract]
    public partial class StudentStudentEducationOrganizationAssociation :  IEquatable<StudentStudentEducationOrganizationAssociation>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StudentStudentEducationOrganizationAssociation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StudentStudentEducationOrganizationAssociation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StudentStudentEducationOrganizationAssociation" /> class.
        /// </summary>
        /// <param name="loginId">The login ID for the user; used for security access control interface..</param>
        /// <param name="sexDescriptor">The student&#39;s gender as last reported to the education organization. (required).</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;.</param>
        /// <param name="educationOrganizationType">educationOrganizationType.</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (required).</param>
        /// <param name="languages">An unordered collection of studentEducationOrganizationAssociationLanguages. .</param>
        /// <param name="races">An unordered collection of studentEducationOrganizationAssociationRaces. .</param>
        public StudentStudentEducationOrganizationAssociation(string loginId = default(string), string sexDescriptor = default(string), bool? hispanicLatinoEthnicity = default(bool?), string educationOrganizationType = default(string), int? educationOrganizationId = default(int?), List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationLanguage> languages = default(List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationLanguage>), List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationRace> races = default(List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationRace>))
        {
            // to ensure "sexDescriptor" is required (not null)
            if (sexDescriptor == null)
            {
                throw new InvalidDataException("sexDescriptor is a required property for StudentStudentEducationOrganizationAssociation and cannot be null");
            }
            else
            {
                this.SexDescriptor = sexDescriptor;
            }
            // to ensure "educationOrganizationId" is required (not null)
            if (educationOrganizationId == null)
            {
                throw new InvalidDataException("educationOrganizationId is a required property for StudentStudentEducationOrganizationAssociation and cannot be null");
            }
            else
            {
                this.EducationOrganizationId = educationOrganizationId;
            }
            this.LoginId = loginId;
            this.HispanicLatinoEthnicity = hispanicLatinoEthnicity;
            this.EducationOrganizationType = educationOrganizationType;
            this.Languages = languages;
            this.Races = races;
        }
        
        /// <summary>
        /// The login ID for the user; used for security access control interface.
        /// </summary>
        /// <value>The login ID for the user; used for security access control interface.</value>
        [DataMember(Name="loginId", EmitDefaultValue=false)]
        public string LoginId { get; set; }

        /// <summary>
        /// The student&#39;s gender as last reported to the education organization.
        /// </summary>
        /// <value>The student&#39;s gender as last reported to the education organization.</value>
        [DataMember(Name="sexDescriptor", EmitDefaultValue=false)]
        public string SexDescriptor { get; set; }

        /// <summary>
        /// An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;
        /// </summary>
        /// <value>An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;</value>
        [DataMember(Name="hispanicLatinoEthnicity", EmitDefaultValue=false)]
        public bool? HispanicLatinoEthnicity { get; set; }

        /// <summary>
        /// Gets or Sets EducationOrganizationType
        /// </summary>
        [DataMember(Name="educationOrganizationType", EmitDefaultValue=false)]
        public string EducationOrganizationType { get; set; }

        /// <summary>
        /// The identifier assigned to an education organization.
        /// </summary>
        /// <value>The identifier assigned to an education organization.</value>
        [DataMember(Name="educationOrganizationId", EmitDefaultValue=false)]
        public int? EducationOrganizationId { get; set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationLanguages. 
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationLanguages. </value>
        [DataMember(Name="languages", EmitDefaultValue=false)]
        public List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationLanguage> Languages { get; set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationRaces. 
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationRaces. </value>
        [DataMember(Name="races", EmitDefaultValue=false)]
        public List<StudentStudentEducationOrganizationAssociationStudentEducationOrganizationAssociationRace> Races { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StudentStudentEducationOrganizationAssociation {\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  SexDescriptor: ").Append(SexDescriptor).Append("\n");
            sb.Append("  HispanicLatinoEthnicity: ").Append(HispanicLatinoEthnicity).Append("\n");
            sb.Append("  EducationOrganizationType: ").Append(EducationOrganizationType).Append("\n");
            sb.Append("  EducationOrganizationId: ").Append(EducationOrganizationId).Append("\n");
            sb.Append("  Languages: ").Append(Languages).Append("\n");
            sb.Append("  Races: ").Append(Races).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StudentStudentEducationOrganizationAssociation);
        }

        /// <summary>
        /// Returns true if StudentStudentEducationOrganizationAssociation instances are equal
        /// </summary>
        /// <param name="input">Instance of StudentStudentEducationOrganizationAssociation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StudentStudentEducationOrganizationAssociation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LoginId == input.LoginId ||
                    (this.LoginId != null &&
                    this.LoginId.Equals(input.LoginId))
                ) && 
                (
                    this.SexDescriptor == input.SexDescriptor ||
                    (this.SexDescriptor != null &&
                    this.SexDescriptor.Equals(input.SexDescriptor))
                ) && 
                (
                    this.HispanicLatinoEthnicity == input.HispanicLatinoEthnicity ||
                    (this.HispanicLatinoEthnicity != null &&
                    this.HispanicLatinoEthnicity.Equals(input.HispanicLatinoEthnicity))
                ) && 
                (
                    this.EducationOrganizationType == input.EducationOrganizationType ||
                    (this.EducationOrganizationType != null &&
                    this.EducationOrganizationType.Equals(input.EducationOrganizationType))
                ) && 
                (
                    this.EducationOrganizationId == input.EducationOrganizationId ||
                    (this.EducationOrganizationId != null &&
                    this.EducationOrganizationId.Equals(input.EducationOrganizationId))
                ) && 
                (
                    this.Languages == input.Languages ||
                    this.Languages != null &&
                    this.Languages.SequenceEqual(input.Languages)
                ) && 
                (
                    this.Races == input.Races ||
                    this.Races != null &&
                    this.Races.SequenceEqual(input.Races)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LoginId != null)
                    hashCode = hashCode * 59 + this.LoginId.GetHashCode();
                if (this.SexDescriptor != null)
                    hashCode = hashCode * 59 + this.SexDescriptor.GetHashCode();
                if (this.HispanicLatinoEthnicity != null)
                    hashCode = hashCode * 59 + this.HispanicLatinoEthnicity.GetHashCode();
                if (this.EducationOrganizationType != null)
                    hashCode = hashCode * 59 + this.EducationOrganizationType.GetHashCode();
                if (this.EducationOrganizationId != null)
                    hashCode = hashCode * 59 + this.EducationOrganizationId.GetHashCode();
                if (this.Languages != null)
                    hashCode = hashCode * 59 + this.Languages.GetHashCode();
                if (this.Races != null)
                    hashCode = hashCode * 59 + this.Races.GetHashCode();
                return hashCode;
            }
        }
    }

}
