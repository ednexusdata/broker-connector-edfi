/* 
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = EdFi.OdsApi.Sdk.Client.SwaggerDateConverter;

namespace EdFi.OdsApi.Sdk.Models.Resources
{
    /// <summary>
    /// TpdmProspectAid
    /// </summary>
    [DataContract]
    public partial class TpdmProspectAid :  IEquatable<TpdmProspectAid>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TpdmProspectAid" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TpdmProspectAid() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TpdmProspectAid" /> class.
        /// </summary>
        /// <param name="aidTypeDescriptor">The classification of financial aid awarded to a person for the academic term/year. (required).</param>
        /// <param name="aidAmount">The amount of financial aid awarded to a person for the term/year..</param>
        /// <param name="aidConditionDescription">The description of the condition (e.g., placement in a high need school) under which the aid was given..</param>
        /// <param name="beginDate">The date the award was designated. (required).</param>
        /// <param name="endDate">The date the award was removed..</param>
        /// <param name="pellGrantRecipient">Indicates a person who receives Pell Grant aid..</param>
        public TpdmProspectAid(string aidTypeDescriptor = default(string), double? aidAmount = default(double?), string aidConditionDescription = default(string), DateTime? beginDate = default(DateTime?), DateTime? endDate = default(DateTime?), bool? pellGrantRecipient = default(bool?))
        {
            // to ensure "aidTypeDescriptor" is required (not null)
            if (aidTypeDescriptor == null)
            {
                throw new InvalidDataException("aidTypeDescriptor is a required property for TpdmProspectAid and cannot be null");
            }
            else
            {
                this.AidTypeDescriptor = aidTypeDescriptor;
            }
            // to ensure "beginDate" is required (not null)
            if (beginDate == null)
            {
                throw new InvalidDataException("beginDate is a required property for TpdmProspectAid and cannot be null");
            }
            else
            {
                this.BeginDate = beginDate;
            }
            this.AidAmount = aidAmount;
            this.AidConditionDescription = aidConditionDescription;
            this.EndDate = endDate;
            this.PellGrantRecipient = pellGrantRecipient;
        }
        
        /// <summary>
        /// The classification of financial aid awarded to a person for the academic term/year.
        /// </summary>
        /// <value>The classification of financial aid awarded to a person for the academic term/year.</value>
        [DataMember(Name="aidTypeDescriptor", EmitDefaultValue=false)]
        public string AidTypeDescriptor { get; set; }

        /// <summary>
        /// The amount of financial aid awarded to a person for the term/year.
        /// </summary>
        /// <value>The amount of financial aid awarded to a person for the term/year.</value>
        [DataMember(Name="aidAmount", EmitDefaultValue=false)]
        public double? AidAmount { get; set; }

        /// <summary>
        /// The description of the condition (e.g., placement in a high need school) under which the aid was given.
        /// </summary>
        /// <value>The description of the condition (e.g., placement in a high need school) under which the aid was given.</value>
        [DataMember(Name="aidConditionDescription", EmitDefaultValue=false)]
        public string AidConditionDescription { get; set; }

        /// <summary>
        /// The date the award was designated.
        /// </summary>
        /// <value>The date the award was designated.</value>
        [DataMember(Name="beginDate", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? BeginDate { get; set; }

        /// <summary>
        /// The date the award was removed.
        /// </summary>
        /// <value>The date the award was removed.</value>
        [DataMember(Name="endDate", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Indicates a person who receives Pell Grant aid.
        /// </summary>
        /// <value>Indicates a person who receives Pell Grant aid.</value>
        [DataMember(Name="pellGrantRecipient", EmitDefaultValue=false)]
        public bool? PellGrantRecipient { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TpdmProspectAid {\n");
            sb.Append("  AidTypeDescriptor: ").Append(AidTypeDescriptor).Append("\n");
            sb.Append("  AidAmount: ").Append(AidAmount).Append("\n");
            sb.Append("  AidConditionDescription: ").Append(AidConditionDescription).Append("\n");
            sb.Append("  BeginDate: ").Append(BeginDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  PellGrantRecipient: ").Append(PellGrantRecipient).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TpdmProspectAid);
        }

        /// <summary>
        /// Returns true if TpdmProspectAid instances are equal
        /// </summary>
        /// <param name="input">Instance of TpdmProspectAid to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TpdmProspectAid input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AidTypeDescriptor == input.AidTypeDescriptor ||
                    (this.AidTypeDescriptor != null &&
                    this.AidTypeDescriptor.Equals(input.AidTypeDescriptor))
                ) && 
                (
                    this.AidAmount == input.AidAmount ||
                    (this.AidAmount != null &&
                    this.AidAmount.Equals(input.AidAmount))
                ) && 
                (
                    this.AidConditionDescription == input.AidConditionDescription ||
                    (this.AidConditionDescription != null &&
                    this.AidConditionDescription.Equals(input.AidConditionDescription))
                ) && 
                (
                    this.BeginDate == input.BeginDate ||
                    (this.BeginDate != null &&
                    this.BeginDate.Equals(input.BeginDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.PellGrantRecipient == input.PellGrantRecipient ||
                    (this.PellGrantRecipient != null &&
                    this.PellGrantRecipient.Equals(input.PellGrantRecipient))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AidTypeDescriptor != null)
                    hashCode = hashCode * 59 + this.AidTypeDescriptor.GetHashCode();
                if (this.AidAmount != null)
                    hashCode = hashCode * 59 + this.AidAmount.GetHashCode();
                if (this.AidConditionDescription != null)
                    hashCode = hashCode * 59 + this.AidConditionDescription.GetHashCode();
                if (this.BeginDate != null)
                    hashCode = hashCode * 59 + this.BeginDate.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.PellGrantRecipient != null)
                    hashCode = hashCode * 59 + this.PellGrantRecipient.GetHashCode();
                return hashCode;
            }
        }
    }

}
