/* 
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = EdFi.OdsApi.Sdk.Client.SwaggerDateConverter;

namespace EdFi.OdsApi.Sdk.Models.Resources
{
    /// <summary>
    /// TpdmSurveyResponseExtension
    /// </summary>
    [DataContract]
    public partial class TpdmSurveyResponseExtension :  IEquatable<TpdmSurveyResponseExtension>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TpdmSurveyResponseExtension" /> class.
        /// </summary>
        /// <param name="applicantReference">applicantReference.</param>
        /// <param name="teacherCandidateReference">teacherCandidateReference.</param>
        public TpdmSurveyResponseExtension(TpdmApplicantReference applicantReference = default(TpdmApplicantReference), TpdmTeacherCandidateReference teacherCandidateReference = default(TpdmTeacherCandidateReference))
        {
            this.ApplicantReference = applicantReference;
            this.TeacherCandidateReference = teacherCandidateReference;
        }
        
        /// <summary>
        /// Gets or Sets ApplicantReference
        /// </summary>
        [DataMember(Name="applicantReference", EmitDefaultValue=false)]
        public TpdmApplicantReference ApplicantReference { get; set; }

        /// <summary>
        /// Gets or Sets TeacherCandidateReference
        /// </summary>
        [DataMember(Name="teacherCandidateReference", EmitDefaultValue=false)]
        public TpdmTeacherCandidateReference TeacherCandidateReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TpdmSurveyResponseExtension {\n");
            sb.Append("  ApplicantReference: ").Append(ApplicantReference).Append("\n");
            sb.Append("  TeacherCandidateReference: ").Append(TeacherCandidateReference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TpdmSurveyResponseExtension);
        }

        /// <summary>
        /// Returns true if TpdmSurveyResponseExtension instances are equal
        /// </summary>
        /// <param name="input">Instance of TpdmSurveyResponseExtension to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TpdmSurveyResponseExtension input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicantReference == input.ApplicantReference ||
                    (this.ApplicantReference != null &&
                    this.ApplicantReference.Equals(input.ApplicantReference))
                ) && 
                (
                    this.TeacherCandidateReference == input.TeacherCandidateReference ||
                    (this.TeacherCandidateReference != null &&
                    this.TeacherCandidateReference.Equals(input.TeacherCandidateReference))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicantReference != null)
                    hashCode = hashCode * 59 + this.ApplicantReference.GetHashCode();
                if (this.TeacherCandidateReference != null)
                    hashCode = hashCode * 59 + this.TeacherCandidateReference.GetHashCode();
                return hashCode;
            }
        }
    }

}
